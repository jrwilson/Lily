2011-10-19

Started developing the kernel with the tutorial at http://wiki.osdev.org/Bare_bones
Decided to create ISO images for testing with Bochs.
The code for doing this can be found in the Makefile.
Developed two functions for printing strings and numbers in hex.
These functions were inspired by the tutorial at http://www.jamesmolloy.co.uk/tutorial_html/3.-The%20Screen.html

2011-10-20

Performed gymnastics trying to get GRUB2 to work.
I agree with http://wiki.osdev.org/GRUB_2 that GRUB2 changed their interface.
Added code to display a message and halt when there is multiboot error.
Added code to halt the processor at the end of the kernel.
Decided to use a higher-half kernel using the GDT trick described at http://wiki.osdev.org/Higher_Half_With_GDT
Switch to the NASM assembler because most of the examples I've found used NASM.
Most of the development time was spent looking up magic numbers.

2011-10-21

I'm currently using the Bochs simulator to test the kernel.
As I complete different pieces, I'll test using a physical machine to eliminate the difference between theory and practice.
Added an entry to /etc/grub.d/40_custom and copied the kernel to /boot.
Comment out the GRUB_HIDDEN_TIMEOUT variable in /etc/default/grub to make the boot menu appear.  (I'm using Ubuntu 10.04.)
The test using the physical machine was successful.
The following page describes x86 descriptor types: http://codewiki.wikispaces.com/x86+descriptor+types
First implementation of interrupts/traps.
Test on physical machine was successful.

2011-10-22

Added support for the programmable interrupt timer using code from http://www.jamesmolloy.co.uk/tutorial_html/5.-IRQs%20and%20the%20PIT.html and http://en.wikipedia.org/wiki/Intel_8253.
Test on physical machine was successful.

2011-10-23

Generalize interrupt handling.
Started parsing the multiboot header.
Wrote functions for extending the identity memory map.

2011-10-24

Wrote primitive page fault handler to debug extending the identity map.
Parsed the memory map provided by GRUB.
Test on physical machine was successful.

2011-10-25

Added a kassert macro to help debug and communicate assumptions.
Changed framebuffer to work before and after paging/GDT.
Added assertions related to identity mapping for memory management.
Test on physical machine was successful.
Setting an interrupt handler now changes the masks on the PICs.
Implemented a placement allocator.
Preliminary implemented of a manager for frames (physical pages).
Test on physical machine was successful.

2011-10-26

Fixed interrupt mask bug.
Refactored paging code.
Starting work on heap allocator.

2011-10-27

Finished heap allocator.
Test on a physical machine was successful.


Kernel Code
Kernel Data
Kernel Stack
Grub Data (created by extending the identity map)
Frame Bitsets

Development Order
-----------------
Interrupts (fault handling)
Heap
System automaton
Userspace
File system
