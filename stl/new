#ifndef __new_hpp__
#define __new_hpp__

/*
  File
  ----
  new.hpp
  
  Description
  -----------
  Functions for dynamic memory.

  Authors:
  Justin R. Wilson
*/

#include "types.hpp"

// #include "list_allocator.hpp"

// extern list_allocator default_allocator;

// inline void*
// operator new (size_t sz)
// {
//   return default_allocator.alloc (sz);
// }

// inline void
// operator delete (void* p)
// {
//   default_allocator.free (p);
// }

// inline void*
// operator new[] (size_t sz)
// {
//   return default_allocator.alloc (sz);
// }

// inline void
// operator delete[] (void* p)
// {
//   default_allocator.free (p);
// }

inline void*
operator new (size_t,
	      void* p)
{
  return p;
}

inline void
operator delete (void*,
		 void*)
{
  // Do nothing.
}

inline void*
operator new[] (size_t,
		void* p)
{
  return p;
}

inline void
operator delete[] (void*,
		   void*)
{
  // Do nothing.
}

/* Local Variables: */
/* mode:c++         */
/* End:             */

#endif /* __new_hpp_ */
